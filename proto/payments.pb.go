// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payments.proto

package payments

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_PENDING  Status = 0
	Status_COMPLETE Status = 1
	Status_FAILED   Status = 2
)

var Status_name = map[int32]string{
	0: "PENDING",
	1: "COMPLETE",
	2: "FAILED",
}
var Status_value = map[string]int32{
	"PENDING":  0,
	"COMPLETE": 1,
	"FAILED":   2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_payments_8958f7c2ba126550, []int{0}
}

type PaymentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentRequest) Reset()         { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()    {}
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_payments_8958f7c2ba126550, []int{0}
}
func (m *PaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRequest.Unmarshal(m, b)
}
func (m *PaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRequest.Merge(dst, src)
}
func (m *PaymentRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentRequest.Size(m)
}
func (m *PaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRequest proto.InternalMessageInfo

func (m *PaymentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PaymentRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *PaymentRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type PaymentByIdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentByIdRequest) Reset()         { *m = PaymentByIdRequest{} }
func (m *PaymentByIdRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentByIdRequest) ProtoMessage()    {}
func (*PaymentByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_payments_8958f7c2ba126550, []int{1}
}
func (m *PaymentByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentByIdRequest.Unmarshal(m, b)
}
func (m *PaymentByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentByIdRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentByIdRequest.Merge(dst, src)
}
func (m *PaymentByIdRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentByIdRequest.Size(m)
}
func (m *PaymentByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentByIdRequest proto.InternalMessageInfo

func (m *PaymentByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AllPaymentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllPaymentsRequest) Reset()         { *m = AllPaymentsRequest{} }
func (m *AllPaymentsRequest) String() string { return proto.CompactTextString(m) }
func (*AllPaymentsRequest) ProtoMessage()    {}
func (*AllPaymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_payments_8958f7c2ba126550, []int{2}
}
func (m *AllPaymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllPaymentsRequest.Unmarshal(m, b)
}
func (m *AllPaymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllPaymentsRequest.Marshal(b, m, deterministic)
}
func (dst *AllPaymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllPaymentsRequest.Merge(dst, src)
}
func (m *AllPaymentsRequest) XXX_Size() int {
	return xxx_messageInfo_AllPaymentsRequest.Size(m)
}
func (m *AllPaymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllPaymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllPaymentsRequest proto.InternalMessageInfo

type Payment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Status               Status   `protobuf:"varint,5,opt,name=status,proto3,enum=payments.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_payments_8958f7c2ba126550, []int{3}
}
func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (dst *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(dst, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payment) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Payment) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Payment) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Payment) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_PENDING
}

type PaymentList struct {
	Payments             []*Payment `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PaymentList) Reset()         { *m = PaymentList{} }
func (m *PaymentList) String() string { return proto.CompactTextString(m) }
func (*PaymentList) ProtoMessage()    {}
func (*PaymentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_payments_8958f7c2ba126550, []int{4}
}
func (m *PaymentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentList.Unmarshal(m, b)
}
func (m *PaymentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentList.Marshal(b, m, deterministic)
}
func (dst *PaymentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentList.Merge(dst, src)
}
func (m *PaymentList) XXX_Size() int {
	return xxx_messageInfo_PaymentList.Size(m)
}
func (m *PaymentList) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentList.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentList proto.InternalMessageInfo

func (m *PaymentList) GetPayments() []*Payment {
	if m != nil {
		return m.Payments
	}
	return nil
}

func init() {
	proto.RegisterType((*PaymentRequest)(nil), "payments.PaymentRequest")
	proto.RegisterType((*PaymentByIdRequest)(nil), "payments.PaymentByIdRequest")
	proto.RegisterType((*AllPaymentsRequest)(nil), "payments.AllPaymentsRequest")
	proto.RegisterType((*Payment)(nil), "payments.Payment")
	proto.RegisterType((*PaymentList)(nil), "payments.PaymentList")
	proto.RegisterEnum("payments.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaymentsClient is the client API for Payments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentsClient interface {
	Pay(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*Payment, error)
	Confirm(ctx context.Context, in *PaymentByIdRequest, opts ...grpc.CallOption) (*Payment, error)
	GetById(ctx context.Context, in *PaymentByIdRequest, opts ...grpc.CallOption) (*Payment, error)
	GetAll(ctx context.Context, in *AllPaymentsRequest, opts ...grpc.CallOption) (*PaymentList, error)
}

type paymentsClient struct {
	cc *grpc.ClientConn
}

func NewPaymentsClient(cc *grpc.ClientConn) PaymentsClient {
	return &paymentsClient{cc}
}

func (c *paymentsClient) Pay(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*Payment, error) {
	out := new(Payment)
	err := c.cc.Invoke(ctx, "/payments.Payments/Pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentsClient) Confirm(ctx context.Context, in *PaymentByIdRequest, opts ...grpc.CallOption) (*Payment, error) {
	out := new(Payment)
	err := c.cc.Invoke(ctx, "/payments.Payments/Confirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentsClient) GetById(ctx context.Context, in *PaymentByIdRequest, opts ...grpc.CallOption) (*Payment, error) {
	out := new(Payment)
	err := c.cc.Invoke(ctx, "/payments.Payments/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentsClient) GetAll(ctx context.Context, in *AllPaymentsRequest, opts ...grpc.CallOption) (*PaymentList, error) {
	out := new(PaymentList)
	err := c.cc.Invoke(ctx, "/payments.Payments/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentsServer is the server API for Payments service.
type PaymentsServer interface {
	Pay(context.Context, *PaymentRequest) (*Payment, error)
	Confirm(context.Context, *PaymentByIdRequest) (*Payment, error)
	GetById(context.Context, *PaymentByIdRequest) (*Payment, error)
	GetAll(context.Context, *AllPaymentsRequest) (*PaymentList, error)
}

func RegisterPaymentsServer(s *grpc.Server, srv PaymentsServer) {
	s.RegisterService(&_Payments_serviceDesc, srv)
}

func _Payments_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Payments/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).Pay(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payments_Confirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).Confirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Payments/Confirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).Confirm(ctx, req.(*PaymentByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payments_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Payments/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).GetById(ctx, req.(*PaymentByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payments_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllPaymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Payments/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).GetAll(ctx, req.(*AllPaymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payments.Payments",
	HandlerType: (*PaymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pay",
			Handler:    _Payments_Pay_Handler,
		},
		{
			MethodName: "Confirm",
			Handler:    _Payments_Confirm_Handler,
		},
		{
			MethodName: "GetById",
			Handler:    _Payments_GetById_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _Payments_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payments.proto",
}

func init() { proto.RegisterFile("payments.proto", fileDescriptor_payments_8958f7c2ba126550) }

var fileDescriptor_payments_8958f7c2ba126550 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xbb, 0x49, 0xdd, 0xd6, 0xa9, 0x84, 0x38, 0xa8, 0x2c, 0xc5, 0x43, 0x58, 0x3c, 0x04,
	0xc1, 0x0a, 0xd5, 0x63, 0x41, 0x6a, 0x1b, 0x4b, 0xa1, 0xd6, 0x10, 0x3d, 0x7a, 0x89, 0x34, 0x85,
	0x40, 0xd2, 0xad, 0xdd, 0xed, 0x21, 0x27, 0x7f, 0xb9, 0x20, 0x4d, 0x36, 0xb1, 0x10, 0x7a, 0x11,
	0x6f, 0x3b, 0x33, 0xef, 0x9b, 0x19, 0xde, 0x2c, 0x58, 0xeb, 0x30, 0x4b, 0xa3, 0x95, 0x92, 0xbd,
	0xf5, 0x46, 0x28, 0x81, 0xed, 0x32, 0xe6, 0xef, 0x60, 0xf9, 0xc5, 0x3b, 0x88, 0x3e, 0xb7, 0x91,
	0x54, 0x68, 0x81, 0x11, 0x2f, 0x18, 0x71, 0x88, 0x7b, 0x1c, 0x18, 0xf1, 0x02, 0x2f, 0x80, 0x86,
	0xa9, 0xd8, 0xae, 0x14, 0x33, 0x1c, 0xe2, 0x9a, 0x81, 0x8e, 0x10, 0xa1, 0xb9, 0xdc, 0x88, 0x94,
	0x99, 0xb9, 0x32, 0x7f, 0xef, 0x58, 0x25, 0x58, 0xb3, 0x60, 0x95, 0xe0, 0x57, 0x80, 0xba, 0xfb,
	0x63, 0x36, 0x5d, 0x1c, 0x98, 0xc0, 0xcf, 0x00, 0x87, 0x49, 0xa2, 0x85, 0x52, 0xab, 0xf8, 0x17,
	0xb4, 0x74, 0xea, 0x3f, 0x57, 0x42, 0x17, 0xa8, 0x54, 0xa1, 0xda, 0x4a, 0x76, 0xe4, 0x10, 0xd7,
	0xea, 0xdb, 0xbd, 0xca, 0x9b, 0xd7, 0x3c, 0x1f, 0xe8, 0x3a, 0x1f, 0x40, 0x47, 0x2f, 0x30, 0x8b,
	0xa5, 0xc2, 0x1b, 0xa8, 0x5c, 0x63, 0xc4, 0x31, 0xdd, 0x4e, 0xff, 0xf4, 0x17, 0x2d, 0x3d, 0xac,
	0x24, 0xd7, 0xb7, 0x40, 0x8b, 0x7e, 0xd8, 0x81, 0x96, 0xef, 0xcd, 0xc7, 0xd3, 0xf9, 0xc4, 0x6e,
	0xe0, 0x09, 0xb4, 0x47, 0x2f, 0xcf, 0xfe, 0xcc, 0x7b, 0xf3, 0x6c, 0x82, 0x00, 0xf4, 0x69, 0x38,
	0x9d, 0x79, 0x63, 0xdb, 0xe8, 0x7f, 0x13, 0x68, 0x97, 0x1e, 0xe0, 0x3d, 0x98, 0x7e, 0x98, 0x21,
	0xab, 0x4f, 0x28, 0xdc, 0xe9, 0xd6, 0x67, 0xf3, 0x06, 0x0e, 0xa0, 0x35, 0x12, 0xab, 0x65, 0xbc,
	0x49, 0xf1, 0xb2, 0x56, 0xdf, 0xbb, 0xc0, 0x41, 0x7a, 0x12, 0xe5, 0xb2, 0xbf, 0xd0, 0x0f, 0x40,
	0x27, 0x91, 0x1a, 0x26, 0xc9, 0x3e, 0x5c, 0x3f, 0x6b, 0xf7, 0xbc, 0x06, 0xef, 0xdc, 0xe5, 0x8d,
	0x0f, 0x9a, 0x7f, 0xcd, 0xbb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x49, 0xc3, 0x91, 0xac,
	0x02, 0x00, 0x00,
}
