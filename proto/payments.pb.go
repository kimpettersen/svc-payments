// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payments.proto

package payments

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_PENDING  Status = 0
	Status_COMPLETE Status = 1
	Status_FAILED   Status = 2
)

var Status_name = map[int32]string{
	0: "PENDING",
	1: "COMPLETE",
	2: "FAILED",
}
var Status_value = map[string]int32{
	"PENDING":  0,
	"COMPLETE": 1,
	"FAILED":   2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_payments_47c92b49121c195b, []int{0}
}

type Payment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Status               Status   `protobuf:"varint,5,opt,name=status,proto3,enum=payments.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_payments_47c92b49121c195b, []int{0}
}
func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (dst *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(dst, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payment) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Payment) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Payment) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Payment) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_PENDING
}

func init() {
	proto.RegisterType((*Payment)(nil), "payments.Payment")
	proto.RegisterEnum("payments.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaymentsClient is the client API for Payments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentsClient interface {
	Pay(ctx context.Context, in *Payment, opts ...grpc.CallOption) (*Payment, error)
}

type paymentsClient struct {
	cc *grpc.ClientConn
}

func NewPaymentsClient(cc *grpc.ClientConn) PaymentsClient {
	return &paymentsClient{cc}
}

func (c *paymentsClient) Pay(ctx context.Context, in *Payment, opts ...grpc.CallOption) (*Payment, error) {
	out := new(Payment)
	err := c.cc.Invoke(ctx, "/payments.Payments/Pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentsServer is the server API for Payments service.
type PaymentsServer interface {
	Pay(context.Context, *Payment) (*Payment, error)
}

func RegisterPaymentsServer(s *grpc.Server, srv PaymentsServer) {
	s.RegisterService(&_Payments_serviceDesc, srv)
}

func _Payments_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Payment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Payments/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).Pay(ctx, req.(*Payment))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payments.Payments",
	HandlerType: (*PaymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pay",
			Handler:    _Payments_Pay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payments.proto",
}

func init() { proto.RegisterFile("payments.proto", fileDescriptor_payments_47c92b49121c195b) }

var fileDescriptor_payments_47c92b49121c195b = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x48, 0xac, 0xcc,
	0x4d, 0xcd, 0x2b, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xea,
	0xb9, 0xd8, 0x03, 0x20, 0x6c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0xce, 0x20, 0xa6, 0xcc, 0x14, 0x21, 0x31, 0x2e, 0xb6, 0xc4, 0xdc, 0xfc, 0xd2, 0xbc, 0x12, 0x09,
	0x26, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x28, 0x4f, 0x48, 0x88, 0x8b, 0x25, 0xad, 0x28, 0x3f, 0x57,
	0x82, 0x19, 0xac, 0x12, 0xcc, 0x06, 0xe9, 0x2d, 0xc9, 0x97, 0x60, 0x81, 0xe8, 0x2d, 0xc9, 0x17,
	0xd2, 0xe0, 0x62, 0x2b, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x96, 0x60, 0x55, 0x60, 0xd4, 0xe0, 0x33,
	0x12, 0xd0, 0x83, 0xbb, 0x20, 0x18, 0x2c, 0x1e, 0x04, 0x95, 0xd7, 0xd2, 0xe7, 0x62, 0x83, 0x88,
	0x08, 0x71, 0x73, 0xb1, 0x07, 0xb8, 0xfa, 0xb9, 0x78, 0xfa, 0xb9, 0x0b, 0x30, 0x08, 0xf1, 0x70,
	0x71, 0x38, 0xfb, 0xfb, 0x06, 0xf8, 0xb8, 0x86, 0xb8, 0x0a, 0x30, 0x0a, 0x71, 0x71, 0xb1, 0xb9,
	0x39, 0x7a, 0xfa, 0xb8, 0xba, 0x08, 0x30, 0x19, 0x59, 0x72, 0x71, 0x40, 0x5d, 0x5c, 0x2c, 0xa4,
	0xcb, 0xc5, 0x1c, 0x90, 0x58, 0x29, 0x24, 0x88, 0x30, 0x1d, 0x2a, 0x25, 0x85, 0x29, 0xa4, 0xc4,
	0x90, 0xc4, 0x06, 0xf6, 0xbd, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x24, 0x91, 0x16, 0x43, 0x0f,
	0x01, 0x00, 0x00,
}
